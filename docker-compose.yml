version: '3.9'

# Docs ########################################################################
# https://github.com/nextcloud/docker

# Volumes #####################################################################
volumes:
  nextcloud_caddy_data:
    external: true
  nextcloud_data:
    external: true
  nextcloud_db_data:
    external: true

# Networks ####################################################################
networks:
  net:
    driver: overlay
    attachable: true

# Services ####################################################################
services:
  # Caddy ---------------------------------------------------------------------
  caddy:
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN: "${DOMAIN:?DOMAIN not set}"
      ADMIN_EMAIL: "${ADMIN_EMAIL:?ADMIN_EMAIL not set}"
    networks:
      - net
    volumes:
      - nextcloud_caddy_data:/data
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    volumes_from:
      - app

  # Postgres ------------------------------------------------------------------
  db:
    image: postgres:${POSTGRES_VERSION:?POSTGRES_VERSION not set}
    restart: unless-stopped
    networks:
      - net
    volumes:
      - nextcloud_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?POSTGRES_USER not set} -d ${POSTGRES_DB:?POSTGRES_DB not set}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_DB: ${POSTGRES_DB:?POSTGRES_DB not set}
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
    command:
      postgres
      -c max_connections=100
      -c shared_buffers=1GB
      -c effective_cache_size=3GB
      -c maintenance_work_mem=256MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=10485kB
      -c min_wal_size=2GB
      -c max_wal_size=8GB
      -c max_worker_processes=2
      -c max_parallel_workers_per_gather=1
      -c max_parallel_workers=2
      -c max_parallel_maintenance_workers=1

  # Redis ---------------------------------------------------------------------
  redis:
    image: redis:alpine
    networks:
      - net
    restart: unless-stopped

  # Nextcloud -----------------------------------------------------------------
  app:
    image: nextcloud:${NEXTCLOUD_VERSION:?NEXTCLOUD_VERSION not set}
    networks:
      - net
    restart: unless-stopped
    volumes:
      - nextcloud_data:/var/www/html
    environment:
      NEXTCLOUD_TRUSTED_DOMAINS: ${DOMAIN:?DOMAIN not set}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER:?NEXTCLOUD_ADMIN_USER not set}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD:?NEXTCLOUD_ADMIN_PASSWORD not set}
      REDIS_HOST: redis
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:?POSTGRES_DB not set}
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
      PHP_MEMORY_LIMIT: '512M'
      PHP_UPLOAD_LIMIT: '16G'
      TZ: 'Europe/Berlin'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  # Cron ----------------------------------------------------------------------
  cron:
    image: nextcloud:${NEXTCLOUD_VERSION:?NEXTCLOUD_VERSION not set}
    networks:
      - net
    restart: unless-stopped
    volumes_from:
      - app
    entrypoint: /cron.sh
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
      redis:
        condition: service_started
